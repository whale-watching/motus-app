{"version":3,"sources":["utils.ts","Animation.ts","Point.ts","Motus.ts","index.ts"],"names":[],"mappings":";;;;AAEa,QAAA,WAAA,GAAc,UAAC,OAAD,EAAkB,KAAlB;AAAA,QAAiC,UAAjC,uEAA8C,GAA9C;AAAA,WAAsD,UAAU,KAAV,GAAkB,UAAxE;AAAA,CAAd;ACCb,ADAa,ICAb,IDAa,MCAb,QAAA,EDAa,GAAmB,ICAhC,CAAA,KDAiC,KAAD,EAAgB,OAAhB;AAAA,QAAiC,UAAjC,uEAA8C,GAA9C;AAAA,ICEhC,ODFsF,KCQlF,KDR4F,KAAV,GAAkB,MCQxF,IDRgB,MCQ5B,EAA+B,QAA/B,EAAgD,OAAhD,EAAsE,SAAtE,EAA0F;AAAA,ADR9D,CAAnB,GEHb,QAEI,eAAY,KAAZ,EAAuC;AAAA,AFE9B,QAAA,OAAA,GAAU,UAAC,KAAD,EAA0B;ACO6C,ADN1F,QAAM,UAAU,2DAAhB;AEHuC,AFIvC,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;ACiDxB,AEvDX,ACAA,AJOQ,IGPR,ACAA,KHuDW,KAAA,AGvDX,CJOe,ECgDI,CEvDnB,CHOQ,UCgDsB,CGvD9B,IDAA,ICAA,IDAA,KCAA,CAAA,CAAA,MDAA,CAAA,CAAA;AFwDQ,AEvDR,ADIW,AECX,AJEK,IGPL,GCKO,EFDI,GDmDG,AGlDd,EDLA,CCKe,IAAI,CFDR,CDmDY,ECnDE,IECN,CHkDW,EEvD9B,ICKe,CHkDP,ACnDkD,CEC1D,EDLA,SAAA,CAAA,CAAA;AFwDQ,ACpDkD,AEG1D,AJCI,QIDJ,AJCU,ICgDE,ACpDc,GEG1B,CJCkB,EIDH,IHiDO,ADhDE,EEJkC,EEG3C,CJCG,CCgDS,ADhDG,KID9B,EJCkB,CAAd,ECgDQ,IAA6B,UAAU,MAAK,QAAhD,EAA0D,2BCpDzB,KAAiB;ADqD9C,ADhDR,IGPJ,IHOQ,IGHJ,CHGA,EAAW,CCgDG,aEnDd,GFmDsC,SAAS,MAAK,UAA5C;AACA,AEpDR,ADDI,AFKA,YELI,GFKG,CCgDG,ECrDD,GFKI,CAAN,CELH,AFKJ,KCgD8B,MAAK,CCrDT,ODqDI,GAAgB,CCrD9C,EAAuC,GDqDY,UAA/C;AACA,ACrDA,AFKP,gBCgDa,ACrDA,OAAO,GDqDW,GCrDN,KDqDM,ACrDX,CAAW,UDqDA,CAAY,UCrDvB,EAAb,CDqDwB,EAA2B,SAA3B,CAAxB;AACA,AEtDR,ADCQ,AFKR,WAAO,IAAP,CCgDc,GCrDE,eAAe,KDqDc,ACrDT,IAAL,GAAY,CDqDE,MCrDK,CDqDL,CAAQ,KCrDrC,EDqD6B,CCrDe,CDqDE,ICrDG,GDqDI,ACrDT,GAAW,CDqDT,CAAY,KCrDI,CDqDC,MCrDvE,GDqDsD,CAAjB,CAArC;AACA,ACrDH,AFKR,CAVY,mBC0DD,SAAA,CAAU,OAAO,IAAP,CAAY,MAAK,SAAjB,CAAV,EAAuC;AAAA,AE1DxC,ADMH,AFKK,QAAA,CGXF,MDMI,CFKF,EGXF,CHWa,EGXD,ADMH,EDoDoC,GCpDhD,CDoDoD,ED/CnC,IGXF,CHWC,EAAmC,IGXhD,OF0DwC;AAAA,AEzDxC,ADMN,AFKD,KEXO,GFWD,CGXC,IFyDC,CEzDD,CFyDuE,EEzD/D,CHWC,OGXD,GFyDmE,IEzD3E,+CHWP;AC+CY,AEzDJ,ADHJ,AFcJ,QAAI,CGXI,ADHC,KAAL,CFcO,EEdM,ECGT,CHWJ,EC8Ca,AEzDiB,ADH9B,ECGI,CHWa,QAArB,EC8CY,AD9CmB,CC8CA,MAAK,SAAL,CAAe,OAAO,IAAP,CAAY,MAAK,SAAjB,EAA4B,CAA5B,CAAf,CAAnB,EAAmE,GAAnE;AACH,AEpDT,ADRC,AFcG,aC4CI,ED5CG,KAAP;AC+CI,AD9CP,kBC8CY,aAAL,CAAmB,oBAAnB,EAAyC,aAAzC,EAAwD,SAAxD;AACH,AClET,AFoBI,QEpBJ,AFoBU,CCqCF,MASO,AClEf,CFoBkB,EEpBlB,IFoBwB,CEpBxB,IFoBkB,CAAY,OAAZ,CAAd;AC8Ca,AD7Cb,QAAI,KAAJ,EAAW;AC8CH,AEnDD,AHMH,SGNG,MHMI,CC6CC,KEnDL,GAAe,AHMF,CC6CC,KD7CK,CC6CA,AD7CN,CAAT,CAAP,CGNmB,KFmDf,EAA4B,EEnDd,EAA+B;AFoDzC,AEnDR,AHMH,cGNQ,QFmDQ,EEnDb,CAAgB,IAAhB,CAAqB,KFmDb,CAAmB,GEnD3B,GFmDgC,SAAL,CAAe,OAAO,IAAP,CAAY,MAAK,SAAjB,EAA4B,CAA5B,CAAf,CAAnB,EAAmE,CAAnE;AACH,AEnDL,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","file":"motus.map","sourceRoot":"../src","sourcesContent":["import Keyframes from \"./Keyframes\";\n\nexport const percentFrom = (current: number, total: number, multiplier = 100) => current / total * multiplier;\nexport const sliceFromPercent = (value: number, percent: number, multiplier = 100) => percent * value / multiplier;\nexport const getUnit = (value: string): string => {\n    const unitReg = /[0-9]+(cm|mm|in|px|pt|pc|em|ex|ch|%|rem|vw|vh|vmin|vmax)$/;\n    if (typeof value === 'number') {\n        return null;\n    }\n    const match = value.match(unitReg);\n    if (match) {\n        return match[1];\n    }\n    return null;\n};\nexport const getValue = (value: string | number): number => {\n    const unitReg = /([0-9]+)(cm|mm|in|px|pt|pc|em|ex|ch|%|rem|vw|vh|vmin|vmax)$/;\n    if (typeof value === 'number') {\n        return value;\n    }\n    const match = value.match(unitReg);\n    if (match) {\n        return parseInt(match[1]);\n    }\n    return null;\n};\nexport const calmelToKebabCase = (value: string): string => {\n    value = value.trim();\n    value = value.replace(value[0], value[0].toLowerCase());\n    for (let i = 0; i < value.length; i++) {\n        if (value[i] === value[i].toUpperCase()) {\n            value = value.substring(0, i) + '-' + value[i].toLowerCase() + value.substring(i + 1);\n        }\n    }\n    return value;\n};\nexport const kebabToCamelCase = (value: string): string => value.replace(/-([a-z])/g, $1 => $1[1].toUpperCase());\nexport const closest = (value: number, arr: any[]): number => {\n    arr = arr.sort((a, b) => a - b);\n    const closestIndex = -1;\n    let i = 0;\n    while (i < arr.length) {\n        if (value < arr[i] && i === 0) { return i; }\n        if (value < arr[i] && value > arr[i - 1]) { return i; }\n        i++;\n    }\n    return closestIndex;\n};\nexport const loopWhile = (value: any[], until: (index?: number) => boolean, func: (index?: number) => void, done?: (index?: number) => void): void => {\n    let index = 0;\n    while (until(index) || index === value.length) {\n        func(index);\n        index++;\n    }\n    if (done) {\n        done(index);\n    }\n};\nexport const getElementDefaultProperty = (element: HTMLElement, property: string): any => {\n    return window.getComputedStyle(element, null).getPropertyValue(property);\n};\nexport const previousKeyframeValue = (keyframes: Keyframes, percent: number | string, property: string): any => {\n    const keyframePercents = Object.keys(keyframes);\n    const previousPercent = keyframePercents.findIndex(e => parseInt(e) === parseInt(percent)) - 1;\n    const previousKeyframe = keyframes[keyframePercents[previousPercent]];\n    if (previousKeyframe) {\n        if (typeof previousKeyframe === 'number' || typeof previousKeyframe === 'string') {\n            return previousKeyframe;\n        }\n        return previousKeyframe[property];\n    }\n    return false;\n};\n","import Keyframe from './Keyframe';\nimport Keyframes from './Keyframes';\nimport Point from './Point';\nimport { calmelToKebabCase, closest, getUnit, getValue, loopWhile, percentFrom, sliceFromPercent, getElementDefaultProperty, previousKeyframeValue } from './utils';\n\nexport default class Animation {\n    public uid: number;\n    public startPoint: number;\n    public endPoint: number;\n    public element: HTMLElement;\n    public keyframes: Keyframes;\n    constructor(startPoint: Point, endPoint: Point, element: HTMLElement, keyframes: Keyframes) {\n        if (!startPoint || !endPoint || !element || !keyframes || !Object.keys(keyframes)) {\n            throw new Error('startPoint endPoint element keyframes must be specified!');\n        }\n        this.uid = Math.random() * 100000000; // basic uid\n        this.startPoint = startPoint.getPosition();\n        this.endPoint = endPoint.getPosition();\n        this.element = element;\n        this.keyframes = keyframes;\n        for (const keyframePercent of Object.keys(this.keyframes)) {\n            const keyframe = this.keyframes[keyframePercent];\n            for (const keyframeProperty of Object.keys(keyframe)) {\n                const keyframeStyle = keyframe[keyframeProperty];\n                let to = null;\n                let from = null;\n                if (typeof keyframeStyle === 'string' || typeof keyframeStyle === 'number') {\n                    to = getValue(keyframeStyle);\n                    from = getElementDefaultProperty(this.element, keyframeProperty);\n                } else {\n                    if (!keyframeStyle.hasOwnProperty('to')) {\n                        throw new Error(`${keyframeProperty} doesn't have 'to' property!`);\n                    } else {\n                        to = keyframeStyle.to;\n                    }\n                    if (keyframe[keyframeProperty].from) {\n                        from = keyframeStyle.from;\n                    } else {\n                        const previousKeyframe = previousKeyframeValue(this.keyframes, parseInt(keyframePercent), keyframeProperty))\n                        if (previousKeyframe) {\n                            from = previousKeyframe.to;\n                        } else {\n                            from = getElementDefaultProperty(this.element, keyframeProperty);\n                        }\n                    }\n                }\n                this.keyframes[keyframePercent][keyframeProperty] = {\n                    from: getValue(from),\n                    to: getValue(to),\n                    unit: keyframeStyle.unit || getUnit(from) || getUnit(to), // to and from unit should be equal\n                };\n            }\n        }\n        console.log(this.keyframes);\n    }\n    public apply = (): void => {\n        const scroll = window.scrollY;\n        if (scroll >= this.startPoint && scroll <= this.endPoint) {\n            const currentScroll: number = scroll - this.startPoint;\n            const maxScroll: number = this.endPoint - this.startPoint;\n            const percent: number = percentFrom(currentScroll, maxScroll);\n            const keyframePercentIndex: number = closest(percent, Object.keys(this.keyframes));\n            loopWhile(Object.keys(this.keyframes), i => i < keyframePercentIndex, i => {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[i]], 100);\n            });\n            this.applyKeyframe(keyframePercentIndex, currentScroll, maxScroll);\n        } else { // apply all keyframes if scroll is over the end point\n            if (scroll < this.endPoint) {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[0]], 0);\n            } else {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[Object.keys(this.keyframes).length - 1]], 100);\n            }\n        }\n    }\n    public setAttributes = (keyframe: Keyframe, percent: number) => {\n        for (let attribute in keyframe) {\n            if (keyframe.hasOwnProperty(attribute)) {\n                const keyframeStyle = keyframe[attribute];\n                attribute = calmelToKebabCase(attribute);\n                const { to, from, unit } = keyframeStyle;\n                this.element.style[attribute] = from + sliceFromPercent(to - from, percent) + unit;\n            }\n        }\n    }\n    private applyKeyframe = (keyframePercentIndex: number, currentScroll: number, maxScroll: number): void => {\n        const keyframe: Keyframe = this.keyframes[Object.keys(this.keyframes)[keyframePercentIndex]]; // needs refactoring because it is very confusing\n        if (!keyframe) { return; }\n        const startKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex - 1]) || 0);\n        const endKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex]));\n        const keyframePercent = percentFrom(currentScroll - startKeyframePositon, endKeyframePositon - startKeyframePositon);\n        this.setAttributes(keyframe, keyframePercent);\n    }\n}\n","export default class Point {\n    public point: number | HTMLElement;\n    constructor(point: number | HTMLElement) {\n        this.point = point;\n    }\n    public getPosition = (isHorizontal = false): number => {\n        if (this.point instanceof HTMLElement) {\n            const rect = this.point.getBoundingClientRect();\n            return (isHorizontal ? rect.left + window.scrollX : rect.top + window.scrollY);\n        }\n        return this.point;\n    }\n}\n","import Animation from './Animation';\nimport Point from './Point';\n\nexport default class Motus {\n    public Animation = Animation;\n    public Point = Point;\n    private animations: Animation[] = [];\n    constructor() {\n        window.addEventListener('scroll', () => {\n            this.animations.forEach(e => e.apply());\n        });\n    }\n    /**Register new animation\n     * @param  {Animation} animation\n     * @returns void\n     */\n    public addAnimation = (animation: Animation): void => {\n        this.animations.push(animation);\n        animation.apply(); // initial apply\n    }\n\n    /**Delete animation\n     * @param  {number} uid Animation uid\n     * @returns void\n     */\n    public removeAnimation = (uid: number): void => {\n        const index = this.animations.findIndex(e => e.uid === uid);\n        this.animations.splice(index, 1);\n    }\n}\n","import Motus from './Motus';\n\ndeclare global {\n    interface Window { Motus: Motus; }\n}\n\nwindow.Motus = new Motus();\n\nexport default Motus;\n"]}