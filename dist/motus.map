{"version":3,"sources":["Animation.ts","Point.ts","Motus.ts","index.ts"],"names":[],"mappings":"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","file":"motus.map","sourceRoot":"../src","sourcesContent":["import Keyframe from './Keyframe';\nimport Keyframes from './Keyframes';\nimport Point from './Point';\nimport { camelToKebabCase, closest, getElementDefaultProperty, getUnit, getValue, loopWhile, percentFrom, previousKeyframeValue, sliceFromPercent } from './utils';\n\nexport default class Animation {\n    public uid: number;\n    public startPoint: number;\n    public endPoint: number;\n    public element: HTMLElement;\n    public keyframes: Keyframes;\n    constructor(startPoint: Point, endPoint: Point, element: HTMLElement, keyframes: Keyframes) {\n        if (!startPoint || !endPoint || !element || !keyframes || !Object.keys(keyframes)) {\n            throw new Error('startPoint endPoint element keyframes must be specified!');\n        }\n        this.uid = Math.random() * 100000000; // basic uid\n        this.startPoint = startPoint.getPosition();\n        this.endPoint = endPoint.getPosition();\n        window.addEventListener('resize', () => {\n            this.startPoint = startPoint.getPosition();\n            this.endPoint = endPoint.getPosition();\n        });\n        this.element = element;\n        this.keyframes = keyframes;\n        for (const keyframePercent of Object.keys(this.keyframes)) {\n            const keyframe = this.keyframes[keyframePercent];\n            for (const keyframeProperty of Object.keys(keyframe)) {\n                const keyframeStyle = keyframe[keyframeProperty];\n                const previousKeyframe = previousKeyframeValue(this.keyframes, parseInt(keyframePercent), keyframeProperty);\n                let to = null;\n                let from = null;\n                if (typeof keyframeStyle === 'string' || typeof keyframeStyle === 'number') {\n                    to = getValue(keyframeStyle);\n                    from = getElementDefaultProperty(this.element, keyframeProperty);\n                } else {\n                    if (!keyframeStyle.hasOwnProperty('to')) {\n                        throw new Error(`${keyframeProperty} doesn't have 'to' property!`);\n                    } else {\n                        to = keyframeStyle.to;\n                    }\n                }\n                if (keyframe[keyframeProperty].hasOwnProperty('from')) {\n                    from = keyframeStyle.from;\n                } else if (previousKeyframe) {\n                    from = previousKeyframe.to;\n                } else {\n                    from = getElementDefaultProperty(this.element, keyframeProperty);\n                }\n                this.keyframes[keyframePercent][keyframeProperty] = {\n                    from: getValue(from),\n                    to: getValue(to),\n                    unit: keyframeStyle.unit || getUnit(from) || getUnit(to) || previousKeyframe.unit, // to and from unit should be equal\n                };\n            }\n        }\n    }\n    public apply = (): void => {\n        const scroll = window.scrollY;\n        if (scroll >= this.startPoint && scroll <= this.endPoint) {\n            const currentScroll: number = scroll - this.startPoint;\n            const maxScroll: number = this.endPoint - this.startPoint;\n            const percent: number = percentFrom(currentScroll, maxScroll);\n            const keyframePercentIndex: number = closest(percent, Object.keys(this.keyframes));\n            loopWhile(Object.keys(this.keyframes), i => i < keyframePercentIndex, i => {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[i]], 100);\n            });\n            this.applyKeyframe(keyframePercentIndex, currentScroll, maxScroll);\n        } else { // apply all keyframes if scroll is over the end point\n            if (scroll < this.endPoint) {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[0]], 0);\n            } else {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[Object.keys(this.keyframes).length - 1]], 100);\n            }\n        }\n    }\n    public setAttributes = (keyframe: Keyframe, percent: number) => {\n        for (let attribute in keyframe) {\n            if (keyframe.hasOwnProperty(attribute)) {\n                const keyframeStyle = keyframe[attribute];\n                attribute = camelToKebabCase(attribute);\n                const { to, from, unit }: { to: number, from: number, unit: string } = keyframeStyle;\n                this.element.style[attribute] = from + sliceFromPercent(to - from, percent) + unit;\n            }\n        }\n    }\n    private applyKeyframe = (keyframePercentIndex: number, currentScroll: number, maxScroll: number): void => {\n        const keyframe: Keyframe = this.keyframes[Object.keys(this.keyframes)[keyframePercentIndex]]; // needs refactoring because it is very confusing\n        if (!keyframe) { return; }\n        const startKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex - 1]) || 0);\n        const endKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex]));\n        const keyframePercent = percentFrom(currentScroll - startKeyframePositon, endKeyframePositon - startKeyframePositon);\n        this.setAttributes(keyframe, keyframePercent);\n    }\n}\n","export default class Point {\n    public point: number | HTMLElement;\n    /**\n     * @param  {number|HTMLElement} point\n     */\n    constructor(point: number | HTMLElement) {\n        this.point = point;\n    }\n    /** Get X of Y absolute position of the point\n     * @param  {} isHorizontal=false\n     * @returns number\n     */\n    public getPosition = (isHorizontal = false): number => {\n        if (this.point instanceof HTMLElement) {\n            const rect = this.point.getBoundingClientRect();\n            return (isHorizontal ? rect.left + window.scrollX : rect.top + window.scrollY);\n        }\n        return this.point;\n    }\n}\n","import Animation from './Animation';\nimport Point from './Point';\n\nexport default class Motus {\n    public Animation = Animation;\n    public Point = Point;\n    private animations: Animation[] = [];\n    constructor() {\n        window.addEventListener('scroll', () => {\n            this.animations.forEach(e => e.apply());\n        });\n        window.addEventListener('resize', () => {\n            this.animations.forEach(e => e.apply());\n        });\n    }\n    /**Register new animation\n     * @param  {Animation} animation\n     * @returns void\n     */\n    public addAnimation = (animation: Animation): void => {\n        this.animations.push(animation);\n        animation.apply(); // initial apply\n    }\n\n    /**Delete animation\n     * @param  {number} uid Animation uid\n     * @returns void\n     */\n    public removeAnimation = (uid: number): void => {\n        const index = this.animations.findIndex(e => e.uid === uid);\n        this.animations.splice(index, 1);\n    }\n}\n","import Motus from './Motus';\n\ndeclare global {\n    interface Window { Motus: Motus; }\n}\n\nwindow.Motus = new Motus();\n\nexport default Motus;\n"]}