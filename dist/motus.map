{"version":3,"sources":["utils.ts","Animation.ts","Point.ts","Motus.ts","index.ts"],"names":[],"mappings":";;;;AAAa,QAAA,WAAA,GAAc,UAAC,OAAD,EAAkB,KAAlB;AAAA,QAAiC,UAAjC,uEAA8C,GAA9C;AAAA,WAAsD,UAAU,KAAV,GAAkB,UAAxE;AAAA,CAAd;ACGb,ADFa,ICEb,IDFa,MCEb,QAAA,EDFa,GAAmB,ICEhC,CAAA,KDFiC,KAAD,EAAgB,OAAhB;AAAA,QAAiC,UAAjC,uEAA8C,GAA9C;AAAA,ICIhC,ODJsF,KCUlF,KDV4F,KAAV,GAAkB,MCUxF,IDVgB,MCU5B,EAA+B,QAA/B,EAAgD,OAAhD,EAAsE,SAAtE,EAA0F;AAAA,ADV9D,CAAnB,GEDb,QAEI,eAAY,KAAZ,EAAuC;AAAA,AFA9B,QAAA,OAAA,GAAU,UAAC,KAAD,EAA0B;ACS6C,ADR1F,QAAM,UAAU,2DAAhB;AEDuC,AFEvC,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;ACyBxB,AE7BX,ACAA,AJKQ,IGLR,ACAA,KH6BW,KAAA,AG7BX,CJKe,ECwBI,CE7BnB,CHKQ,UCwBsB,CG7B9B,IDAA,ICAA,IDAA,KCAA,CAAA,CAAA,MDAA,CAAA,CAAA;AF8BQ,AE7BR,ADIW,AECX,AJAK,IGLL,GCKO,EFDI,GDyBG,AGxBd,EDLA,CCKe,IAAI,CFDR,CDyBY,ECzBE,IECN,CHwBW,EE7B9B,ICKe,CHwBP,ACzBkD,CEC1D,EDLA,SAAA,CAAA,CAAA;AF8BQ,AC1BkD,AEG1D,AJDI,QICJ,AJDU,ICwBE,AC1Bc,GEG1B,CJDkB,EICH,IHuBO,ADxBE,EEFkC,EEG3C,CJDG,CCwBS,ADxBG,KIC9B,EJDkB,CAAd,ECwBQ,IAA6B,UAAU,MAAK,QAAhD,EAA0D,2BC1BzB,KAAiB;AD2B9C,ADxBR,IGLJ,IHKQ,IGDJ,CHCA,EAAW,CCwBG,aEzBd,GFyBsC,SAAS,MAAK,UAA5C;AACA,AE1BR,ADDI,AFGA,YEHI,GFGG,CCwBG,EC3BD,GFGI,CAAN,CEHH,AFGJ,KCwB8B,MAAK,CC3BT,OD2BI,GAAgB,CC3B9C,EAAuC,GD2BY,UAA/C;AACA,AC3BA,AFGP,gBCwBa,AC3BA,OAAO,GD2BW,GC3BN,KD2BM,AC3BX,CAAW,UD2BA,CAAY,UC3BvB,EAAb,CD2BwB,EAA2B,SAA3B,CAAxB;AACA,AE5BR,ADCQ,AFGR,WAAO,IAAP,CCwBc,GC3BE,eAAe,KD2Bc,AC3BT,IAAL,GAAY,CD2BE,MC3BK,CD2BL,CAAQ,KC3BrC,ED2B6B,CC3Be,CD2BE,IC3BG,GD2BI,AC3BT,GAAW,CD2BT,CAAY,KC3BI,CD2BC,MC3BvE,GD2BsD,CAAjB,CAArC;AACA,AC3BH,AFGR,CAVY,mBCkCD,SAAA,CAAU,OAAO,IAAP,CAAY,MAAK,SAAjB,CAAV,EAAuC;AAAA,AEhCxC,ADMH,AFGK,QAAA,CGTF,MDMI,CFGF,EGTF,CHSa,EGTD,ADMH,ED0BoC,GC1BhD,CD0BoD,EDvBnC,IGTF,CHSC,EAA0B,IGTvC,OFgCwC;AAAA,AE/BxC,ADMN,AFGD,KETO,GFSD,CGTC,IF+BC,CE/BD,CF+BuE,EE/B/D,CHSC,OGTD,GF+BmE,IE/B3E,+CHSP;ACuBY,AE/BJ,ADHJ,AFYJ,QAAI,CGTI,ADHC,KAAL,CFYO,EEZM,ECGT,CHSJ,ECsBa,AE/BiB,ADH9B,ECGI,CHSa,QAArB,ECsBY,ADtBmB,CCsBA,MAAK,SAAL,CAAe,OAAO,IAAP,CAAY,MAAK,SAAjB,EAA4B,CAA5B,CAAf,CAAnB,EAAmE,GAAnE;AACH,AE1BT,ADRC,AFYG,aCoBI,EDpBG,KAAP;ACuBI,ADtBP,kBCsBY,aAAL,CAAmB,oBAAnB,EAAyC,aAAzC,EAAwD,SAAxD;AACH,ACxCT,AFkBI,QElBJ,AFkBU,CCaF,MASO,ACxCf,CFkBkB,EElBlB,IFkBwB,CElBxB,IFkBkB,CAAY,OAAZ,CAAd;ACsBa,ADrBb,QAAI,KAAJ,EAAW;ACsBH,AEzBD,AHIH,SGJG,MHII,ECqBE,IAAM,AEzBZ,GAAe,AHIF,KCqBZ,CDrBkB,CAAN,CAAT,CCqBmB,ADrB1B,CGJmB,KFyBY,IEzBb,EAA+B,GFyB7C,EAAsC;AAClC,AEzBR,AHIH,cGJQ,MFyBO,IEzBZ,CAAgB,CFyBC,GEzBjB,CAAqB,KFyBT,CAAe,GEzB3B,WFyBY,CAA8B,QAA9B,CAAJ,EAA4C;AACxC,AEzBZ,AHIJ,WAAO,IAAP,GGJc,KAAV,GFyB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","file":"motus.map","sourceRoot":"../src","sourcesContent":["export const percentFrom = (current: number, total: number, multiplier = 100) => current / total * multiplier;\nexport const sliceFromPercent = (value: number, percent: number, multiplier = 100) => percent * value / multiplier;\nexport const getUnit = (value: string): string => {\n    const unitReg = /[0-9]+(cm|mm|in|px|pt|pc|em|ex|ch|%|rem|vw|vh|vmin|vmax)$/;\n    if (typeof value === 'number') {\n        return null;\n    }\n    const match = value.match(unitReg);\n    if (match) {\n        return match[1];\n    }\n    return null;\n};\nexport const getValue = (value: string): number => {\n    const unitReg = /([0-9]+)(cm|mm|in|px|pt|pc|em|ex|ch|%|rem|vw|vh|vmin|vmax)$/;\n    if (typeof value === 'number') {\n        return value;\n    }\n    const match = value.match(unitReg);\n    if (match) {\n        return parseInt(match[1]);\n    }\n    return null;\n};\nexport const calmelToKebabCase = (value: string): string => {\n    value = value.trim();\n    value = value.replace(value[0], value[0].toLowerCase());\n    for (let i = 0; i < value.length; i++) {\n        if (value[i] === value[i].toUpperCase()) {\n            value = value.substring(0, i) + '-' + value[i].toLowerCase() + value.substring(i + 1);\n        }\n    }\n    return value;\n};\nexport const kebabToCamelCase = (value: string): string => value.replace(/-([a-z])/g, $1 => $1[1].toUpperCase());\nexport const closest = (value: number, arr: any[]): number => {\n    arr = arr.sort((a, b) => a - b);\n    const closestIndex = -1;\n    let i = 0;\n    while (i < arr.length) {\n        if (value < arr[i] && i === 0) { return i; }\n        if (value < arr[i] && value > arr[i - 1]) { return i; }\n        i++;\n    }\n    return closestIndex;\n};\nexport const loopWhile = (value: any[], until: (index?: number) => boolean, func: (index?: number) => void, done?: (index?: number) => void): void => {\n    let index = 0;\n    while (until(index) || index === value.length) {\n        func(index);\n        index++;\n    }\n    if (done) {\n        done(index);\n    }\n};\nexport const getElementDefaultProperty = (element: HTMLElement, property: string): any => {\n    return window.getComputedStyle(element, null).getPropertyValue(property);\n};\n","import Keyframe from './Keyframe';\nimport Keyframes from './Keyframes';\nimport Point from './Point';\nimport { calmelToKebabCase, closest, getUnit, getValue, loopWhile, percentFrom, sliceFromPercent, getElementDefaultProperty } from './utils';\n\nexport default class Animation {\n    public uid: number;\n    public startPoint: number;\n    public endPoint: number;\n    public element: HTMLElement;\n    public keyframes: Keyframes;\n    constructor(startPoint: Point, endPoint: Point, element: HTMLElement, keyframes: Keyframes) {\n        if (!startPoint || !endPoint || !element || !keyframes || !Object.keys(keyframes)) {\n            throw new Error('startPoint endPoint element keyframes must be specified!');\n        }\n        this.uid = Math.random() * 100000000; // basic uid\n        this.startPoint = startPoint.getPosition();\n        this.endPoint = endPoint.getPosition();\n        this.element = element;\n        this.keyframes = keyframes;\n        for (const keyframePercent of Object.keys(this.keyframes)) {\n            const keyframe = this.keyframes[keyframePercent];\n            for (const keyframeProperty of Object.keys(keyframe)) {\n                if (!keyframe[keyframeProperty].from) {\n                    keyframe[keyframeProperty].from = getElementDefaultProperty(this.element, keyframeProperty);\n                }\n            }\n        }\n    }\n    public apply = (): void => {\n        const scroll = window.scrollY;\n        if (scroll >= this.startPoint && scroll <= this.endPoint) {\n            const currentScroll: number = scroll - this.startPoint;\n            const maxScroll: number = this.endPoint - this.startPoint;\n            const percent: number = percentFrom(currentScroll, maxScroll);\n            const keyframePercentIndex: number = closest(percent, Object.keys(this.keyframes));\n            loopWhile(Object.keys(this.keyframes), i => i < keyframePercentIndex, i => {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[i]], 100);\n            });\n            this.applyKeyframe(keyframePercentIndex, currentScroll, maxScroll);\n        } else { // apply all keyframes if scroll is over the end point\n            for (const percent in this.keyframes) {\n                if (this.keyframes.hasOwnProperty(percent)) {\n                    this.setAttributes(this.keyframes[percent], (scroll > this.endPoint ? 100 : 0));\n                }\n            }\n        }\n    }\n    public setAttributes = (keyframe: Keyframe, percent: number) => {\n        for (let attribute in keyframe) {\n            if (keyframe.hasOwnProperty(attribute)) {\n                const keyframeStyle = keyframe[attribute];\n                attribute = calmelToKebabCase(attribute);\n                const to = getValue(keyframeStyle.to) || keyframeStyle;\n                const from = getValue(keyframeStyle.from || '0px');\n                const unit = keyframeStyle.unit || getUnit(keyframeStyle.to) || getUnit(keyframeStyle.from) || 'px'; // to and from should be equal\n                this.element.style[attribute] = from + sliceFromPercent(to - from, percent) + unit;\n            }\n        }\n    }\n    private applyKeyframe = (keyframePercentIndex: number, currentScroll: number, maxScroll: number): void => {\n        const keyframe: Keyframe = this.keyframes[Object.keys(this.keyframes)[keyframePercentIndex]]; // needs refactoring because it is very confusing\n        if (!keyframe) { return; }\n        const startKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex - 1]) || 0);\n        const endKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex]));\n        const keyframePercent = percentFrom(currentScroll - startKeyframePositon, endKeyframePositon - startKeyframePositon);\n        this.setAttributes(keyframe, keyframePercent);\n    }\n}\n","export default class Point {\n    public point: number | HTMLElement;\n    constructor(point: number | HTMLElement) {\n        this.point = point;\n    }\n    public getPosition = (isHorizontal = false): number => {\n        if (this.point instanceof HTMLElement) {\n            const rect = this.point.getBoundingClientRect();\n            return (isHorizontal ? rect.left + window.scrollX : rect.top + window.scrollY);\n        }\n        return this.point;\n    }\n}\n","import Animation from './Animation';\nimport Point from './Point';\n\nexport default class Motus {\n    public Animation = Animation;\n    public Point = Point;\n    private animations: Animation[] = [];\n    constructor() {\n        window.addEventListener('scroll', () => {\n            this.animations.forEach(e => e.apply());\n        });\n    }\n    /**Register new animation\n     * @param  {Animation} animation\n     * @returns void\n     */\n    public addAnimation = (animation: Animation): void => {\n        this.animations.push(animation);\n        animation.apply(); // initial apply\n    }\n\n    /**Delete animation\n     * @param  {number} uid Animation uid\n     * @returns void\n     */\n    public removeAnimation = (uid: number): void => {\n        const index = this.animations.findIndex(e => e.uid === uid);\n        this.animations.splice(index, 1);\n    }\n}\n","import Motus from './Motus';\n\ndeclare global {\n    interface Window { Motus: Motus; }\n}\n\nwindow.Motus = new Motus();\n\nexport default Motus;\n"]}