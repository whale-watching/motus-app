{"version":3,"sources":["utils.ts","Animation.ts","Point.ts","Motus.ts","index.ts"],"names":[],"mappings":";;;;AAEa,QAAA,WAAA,GAAc,UAAC,OAAD,EAAkB,KAAlB;AAAA,QAAiC,UAAjC,uEAA8C,GAA9C;AAAA,WAAsD,UAAU,KAAV,GAAkB,UAAxE;AAAA,CAAd;ACCb,ADAa,ICAb,IDAa,MCAb,QAAA,EDAa,GAAmB,ICAhC,CAAA,KDAiC,KAAD,EAAgB,OAAhB;AAAA,QAAiC,UAAjC,uEAA8C,GAA9C;AAAA,ICEhC,ODFsF,KCQlF,KDR4F,KAAV,GAAkB,MCQxF,IDRgB,MCQ5B,EAA+B,QAA/B,EAAgD,OAAhD,EAAsE,SAAtE,EAA0F;AAAA,ADR9D,CAAnB,GEHb;AAEI,AFES,QAAA,OAAA,GAAU,UAAC,KAAD,EAA0B;ACO6C,ADN1F,QAAM,UAAU,2DAAhB;AACA,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AC8CxB,AEpDX,ADKI,AELJ,AJOQ,IGPR,ACAA,KHoDW,KAAA,AGpDX,CFKgB,AFED,EC6CI,CEpDnB,CHOQ,CEFJ,EAAuC,OD+Cb,CGpD9B,IDAA,ICAA,IDAA,KCAA,CAAA,CAAA,MDAA,CAAA,CAAA;AFqDQ,AEpDR,ADI2C,AEC3C,AJEK,IGPL,GCKO,KH+CO,AG/Cd,EDLA,CCKe,IAAI,EH+CI,MG/CJ,CH+CW,EEpD9B,ICKe,CH+CP,CG/CR,EDLA,SAAA,CAAA,CAAA;AFqDQ,AG9CR,AJCI,QIDJ,AJCU,IC6CE,GG9CZ,CJCkB,EIDH,IH8CO,AD7CE,IIDT,CJCG,CC6CS,AD7CG,KID9B,EJCkB,CAAd,EC6CQ,IAA6B,UAAU,MAAK,QAAhD,EAA0D;AACtD,AClD+B,AFKvC,IGPJ,IHOQ,IGHJ,CHGA,EAAW,CC6CG,aEhDd,GFgDsC,SAAS,MAAK,UAA5C;AACA,AEjDR,AHII,eAAO,CC6CG,KD7CG,CAAN,CAAP,KC6C8B,MAAK,QAAL,GAAgB,MAAK,UAA/C;AACA,ACjDR,AFIC,gBC6Ca,UAAkB,QAAA,WAAA,CAAY,aAAZ,EAA2B,SAA3B,CAAxB;AACA,AEnDR,AHMA,WAAO,IAAP,CC6Cc,uBAA+B,QAAA,OAAA,CAAQ,OAAR,EAAiB,OAAO,IAAP,CAAY,MAAK,SAAjB,CAAjB,CAArC;AACA,AD7CX,CAVY,mBCuDD,SAAA,CAAU,OAAO,IAAP,CAAY,MAAK,SAAjB,CAAV,EAAuC;AAAA,AEvDxC,AHWE,QAAA,CGXF,OHWE,EGXF,CHWa,EGXD,EFuDiC,IAAI,ED5CnC,IGXF,CHWC,EAAmC,IGXhD,OFuDwC;AAAA,AEtDxC,ADOA,AFIP,QAAM,CGXC,ADOA,ID+CC,CEtDD,CFsDuE,EEtD/D,CHWC,EEJT,GAAc,ECPN,GFsDmE,IEtD3E,GDO+C,4CFItD;AC4CY,AEtDJ,ADM8C,AFKtD,QAAI,CGXI,GDMc,GFKX,IGXH,CHWJ,EC2Ca,AEtDiB,EAA1B,ADM8C,CFKjC,QAArB,EC2CY,AD3CmB,CC2CA,MAAK,SAAL,CAAe,OAAO,IAAP,CAAY,MAAK,SAAjB,EAA4B,CAA5B,CAAf,CAAnB,EAAmE,GAAnE,MChDyB,KAAiB;ADiD7C,AEjDT,AHMI,aCyCI,EDzCG,KAAP;AC4CI,ACjDJ,AFMH,YENO,MDiDK,ACjDA,KAAL,QDiDA,CAAmB,GCjDG,WAA1B,EAAuC,IDiDnC,EAAyC,aAAzC,EAAwD,SAAxD;AACH,ACjDG,AFMR,QAAM,CCkCF,MASO,CCjDG,AFMA,MAAM,CENC,IFMP,CAAY,CENA,KAAL,CAAW,AFMlB,CAAd,oBENqB,EAAb;ADiDK,AChDL,AFMR,QAAI,KAAJ,EAAW,IENK,eAAe,KAAK,IAAL,GAAY,OAAO,OAAlC,GAA4C,KAAK,GAAL,GAAW,OAAO,OAAtE;ADiDA,AEhDD,ADAF,AFMD,SGNG,MHMI,CC0CC,KEhDL,GAAe,AHMF,CC0CC,KD1CK,CC0CA,AD1CN,CAAT,CAAP,CGNmB,KFgDf,EAA4B,EEhDd,EAA+B;AFiDzC,AEhDR,ADAA,AFMH,cGNQ,CDAE,MAAK,CDgDC,EEhDb,CAAgB,CDAhB,GCAA,CAAqB,KFgDb,CAAmB,GEhD3B,GFgDgC,SAAL,CAAe,OAAO,IAAP,CAAY,MAAK,SAAjB,EAA4B,CAA5B,CAAf,CAAnB,EAAmE,CAAnE;AACH,AEhDL,ADAH,AFMD,KEZO,MFYA,ECwCC,EDxCR,GGNc,CFgDC,IEhDX,GAFiD,CAE9B;AFiDX,AEhDX,ADbG,AFmBP,CAVY,IGCF,I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","file":"motus.map","sourceRoot":"../src","sourcesContent":["import Keyframes from \"./Keyframes\";\n\nexport const percentFrom = (current: number, total: number, multiplier = 100) => current / total * multiplier;\nexport const sliceFromPercent = (value: number, percent: number, multiplier = 100) => percent * value / multiplier;\nexport const getUnit = (value: string): string => {\n    const unitReg = /[0-9]+(cm|mm|in|px|pt|pc|em|ex|ch|%|rem|vw|vh|vmin|vmax)$/;\n    if (typeof value === 'number') {\n        return null;\n    }\n    const match = value.match(unitReg);\n    if (match) {\n        return match[1];\n    }\n    return null;\n};\nexport const getValue = (value: string | number): number => {\n    const unitReg = /([0-9]+)(cm|mm|in|px|pt|pc|em|ex|ch|%|rem|vw|vh|vmin|vmax)$/;\n    if (typeof value === 'number') {\n        return value;\n    }\n    const match = value.match(unitReg);\n    if (match) {\n        return parseInt(match[1]);\n    }\n    return null;\n};\nexport const camelToKebabCase = (value: string): string => value.replace(/([A-Z])/g, $1 => '-' + $1.toLowerCase());\nexport const kebabToCamelCase = (value: string): string => value.replace(/-([a-z])/g, $1 => $1[1].toUpperCase());\nexport const closest = (value: number, arr: any[]): number => {\n    arr = arr.sort((a, b) => a - b);\n    const closestIndex = -1;\n    let i = 0;\n    while (i < arr.length) {\n        if (value < arr[i] && i === 0) { return i; }\n        if (value < arr[i] && value > arr[i - 1]) { return i; }\n        i++;\n    }\n    return closestIndex;\n};\nexport const loopWhile = (value: any[], until: (index?: number) => boolean, func: (index?: number) => void, done?: (index?: number) => void): void => {\n    let index = 0;\n    while (until(index) || index === value.length) {\n        func(index);\n        index++;\n    }\n    if (done) {\n        done(index);\n    }\n};\nexport const getElementDefaultProperty = (element: HTMLElement, property: string): any => {\n    return window.getComputedStyle(element, null).getPropertyValue(camelToKebabCase(property));\n};\nexport const previousKeyframeValue = (keyframes: Keyframes, percent: number, property: string): any => {\n    const keyframePercents = Object.keys(keyframes);\n    const previousPercent = keyframePercents.findIndex(e => parseInt(e) === percent) - 1;\n    const previousKeyframe = keyframes[keyframePercents[previousPercent]];\n    if (previousKeyframe) {\n        if (typeof previousKeyframe === 'number' || typeof previousKeyframe === 'string') {\n            return previousKeyframe;\n        }\n        return previousKeyframe[property];\n    }\n    return false;\n};\n","import Keyframe from './Keyframe';\nimport Keyframes from './Keyframes';\nimport Point from './Point';\nimport { camelToKebabCase, closest, getElementDefaultProperty, getUnit, getValue, loopWhile, percentFrom, previousKeyframeValue, sliceFromPercent } from './utils';\n\nexport default class Animation {\n    public uid: number;\n    public startPoint: number;\n    public endPoint: number;\n    public element: HTMLElement;\n    public keyframes: Keyframes;\n    constructor(startPoint: Point, endPoint: Point, element: HTMLElement, keyframes: Keyframes) {\n        if (!startPoint || !endPoint || !element || !keyframes || !Object.keys(keyframes)) {\n            throw new Error('startPoint endPoint element keyframes must be specified!');\n        }\n        this.uid = Math.random() * 100000000; // basic uid\n        this.startPoint = startPoint.getPosition();\n        this.endPoint = endPoint.getPosition();\n        this.element = element;\n        this.keyframes = keyframes;\n        for (const keyframePercent of Object.keys(this.keyframes)) {\n            const keyframe = this.keyframes[keyframePercent];\n            for (const keyframeProperty of Object.keys(keyframe)) {\n                const keyframeStyle = keyframe[keyframeProperty];\n                const previousKeyframe = previousKeyframeValue(this.keyframes, parseInt(keyframePercent), keyframeProperty);\n                let to = null;\n                let from = null;\n                if (typeof keyframeStyle === 'string' || typeof keyframeStyle === 'number') {\n                    to = getValue(keyframeStyle);\n                    from = getElementDefaultProperty(this.element, keyframeProperty);\n                } else {\n                    if (!keyframeStyle.hasOwnProperty('to')) {\n                        throw new Error(`${keyframeProperty} doesn't have 'to' property!`);\n                    } else {\n                        to = keyframeStyle.to;\n                    }\n                }\n                if (keyframe[keyframeProperty].hasOwnProperty('from')) {\n                    from = keyframeStyle.from;\n                } else if (previousKeyframe) {\n                    from = previousKeyframe.to;\n                } else {\n                    from = getElementDefaultProperty(this.element, keyframeProperty);\n                }\n                this.keyframes[keyframePercent][keyframeProperty] = {\n                    from: getValue(from),\n                    to: getValue(to),\n                    unit: keyframeStyle.unit || getUnit(from) || getUnit(to) || previousKeyframe.unit, // to and from unit should be equal\n                };\n            }\n        }\n    }\n    public apply = (): void => {\n        const scroll = window.scrollY;\n        if (scroll >= this.startPoint && scroll <= this.endPoint) {\n            const currentScroll: number = scroll - this.startPoint;\n            const maxScroll: number = this.endPoint - this.startPoint;\n            const percent: number = percentFrom(currentScroll, maxScroll);\n            const keyframePercentIndex: number = closest(percent, Object.keys(this.keyframes));\n            loopWhile(Object.keys(this.keyframes), i => i < keyframePercentIndex, i => {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[i]], 100);\n            });\n            this.applyKeyframe(keyframePercentIndex, currentScroll, maxScroll);\n        } else { // apply all keyframes if scroll is over the end point\n            if (scroll < this.endPoint) {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[0]], 0);\n            } else {\n                this.setAttributes(this.keyframes[Object.keys(this.keyframes)[Object.keys(this.keyframes).length - 1]], 100);\n            }\n        }\n    }\n    public setAttributes = (keyframe: Keyframe, percent: number) => {\n        for (let attribute in keyframe) {\n            if (keyframe.hasOwnProperty(attribute)) {\n                const keyframeStyle = keyframe[attribute];\n                attribute = camelToKebabCase(attribute);\n                const { to, from, unit }: { to: number, from: number, unit: string } = keyframeStyle;\n                this.element.style[attribute] = from + sliceFromPercent(to - from, percent) + unit;\n            }\n        }\n    }\n    private applyKeyframe = (keyframePercentIndex: number, currentScroll: number, maxScroll: number): void => {\n        const keyframe: Keyframe = this.keyframes[Object.keys(this.keyframes)[keyframePercentIndex]]; // needs refactoring because it is very confusing\n        if (!keyframe) { return; }\n        const startKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex - 1]) || 0);\n        const endKeyframePositon = sliceFromPercent(maxScroll, parseInt(Object.keys(this.keyframes)[keyframePercentIndex]));\n        const keyframePercent = percentFrom(currentScroll - startKeyframePositon, endKeyframePositon - startKeyframePositon);\n        this.setAttributes(keyframe, keyframePercent);\n    }\n}\n","export default class Point {\n    public point: number | HTMLElement;\n    /**\n     * @param  {number|HTMLElement} point\n     */\n    constructor(point: number | HTMLElement) {\n        this.point = point;\n    }\n    /** Get X of Y absolute position of the point\n     * @param  {} isHorizontal=false\n     * @returns number\n     */\n    public getPosition = (isHorizontal = false): number => {\n        if (this.point instanceof HTMLElement) {\n            const rect = this.point.getBoundingClientRect();\n            return (isHorizontal ? rect.left + window.scrollX : rect.top + window.scrollY);\n        }\n        return this.point;\n    }\n}\n","import Animation from './Animation';\nimport Point from './Point';\n\nexport default class Motus {\n    public Animation = Animation;\n    public Point = Point;\n    private animations: Animation[] = [];\n    constructor() {\n        window.addEventListener('scroll', () => {\n            this.animations.forEach(e => e.apply());\n        });\n    }\n    /**Register new animation\n     * @param  {Animation} animation\n     * @returns void\n     */\n    public addAnimation = (animation: Animation): void => {\n        this.animations.push(animation);\n        animation.apply(); // initial apply\n    }\n\n    /**Delete animation\n     * @param  {number} uid Animation uid\n     * @returns void\n     */\n    public removeAnimation = (uid: number): void => {\n        const index = this.animations.findIndex(e => e.uid === uid);\n        this.animations.splice(index, 1);\n    }\n}\n","import Motus from './Motus';\n\ndeclare global {\n    interface Window { Motus: Motus; }\n}\n\nwindow.Motus = new Motus();\n\nexport default Motus;\n\n"]}